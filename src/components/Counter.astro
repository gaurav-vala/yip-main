---
const { target, duration, title } = Astro.props;
---

<div class="border border-neutral-300 px-4 py-2 w-full rounded-xl">
  <p
    class="counter text-4xl font-bold"
    data-target={target}
    data-duration={duration}
  >
    0
  </p>
  <h3 class="text-lg">{title}</h3>
</div>

<script>
  function initializeCounters() {
    const counters = document.querySelectorAll(".counter");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const targetEl = entry.target; // Get target element
            if (!(targetEl instanceof HTMLElement)) return; // Type check

            let start = 0;
            const target = parseInt(targetEl.dataset.target ?? "0");
            const duration = parseInt(targetEl.dataset.duration ?? "2000");
            const increment = target / (duration / 16);

            const updateCounter = () => {
              start += increment;
              if (start >= target) {
                targetEl.textContent = `${target}+`;
              } else {
                targetEl.textContent = `${Math.floor(start)}+`;
                requestAnimationFrame(updateCounter);
              }
            };

            updateCounter();
            observer.unobserve(targetEl);
          }
        });
      },
      { threshold: 0.5 }
    );

    counters.forEach((counter) => {
      observer.observe(counter);
    });
  }

  // Run on initial load
  initializeCounters();

  // Re-run on page changes in Astro SPA mode
  document.addEventListener("astro:after-swap", initializeCounters);
</script>
