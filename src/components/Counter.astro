---
const { target, duration, title } = Astro.props;
---

<div class="border border-neutral-300 px-4 py-2 w-full rounded-xl">
  <p
    class="counter text-4xl font-bold"
    data-target={target}
    data-duration={duration}
  >
    0
  </p>
  <h3 class="text-lg">{title}</h3>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const counters = document.querySelectorAll(".counter");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            let start = 0;
            const target = parseInt(
              entry.target.getAttribute("data-target") ?? "0"
            );
            const duration = parseInt(
              entry.target.getAttribute("data-duration") ?? "2000"
            );
            const increment = target / (duration / 16);

            const updateCounter = () => {
              start += increment;
              if (start >= target) {
                entry.target.textContent = `${target.toString()}+`;
              } else {
                entry.target.textContent = `${Math.floor(start).toString()}+`;
                requestAnimationFrame(updateCounter);
              }
            };

            updateCounter();
            observer.unobserve(entry.target); // Stop observing after animation
          }
        });
      },
      { threshold: 0.5 }
    );

    counters.forEach((counter) => observer.observe(counter));
  });
</script>
